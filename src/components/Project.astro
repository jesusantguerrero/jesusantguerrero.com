---
import Image from 'astro/components/Image.astro';

export interface Project {
    title: string;
    description: string;
    technologies: string[];
    imageUrl?: string
    link?: string
}
export interface Props {
    project: Partial<Project>;
    target?: string;
    link?: string;
    className?: string;
    projectType?: string;
}

const { project, target, link, className, projectType } = Astro.props;

const icon = () => {
    let icon: string;
    switch (target) {
        case '_blank':
            icon = '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 16 16"><g fill="none"><path d="M9.5 4h1a3.5 3.5 0 0 1 .194 6.995l-.192.005l-1 .005a.5.5 0 0 1-.094-.992l.09-.008L10.5 10a2.5 2.5 0 0 0 .164-4.995L10.5 5h-1a.5.5 0 0 1-.09-.992L9.5 4h1h-1zm-4 0h1a.5.5 0 0 1 .09.992L6.5 5h-1a2.5 2.5 0 0 0-.164 4.995L5.5 10h1a.5.5 0 0 1 .09.992L6.5 11h-1a3.5 3.5 0 0 1-.192-6.995L5.5 4h1h-1zm0 3l5 .002a.5.5 0 0 1 .09.992l-.09.008L5.5 8a.5.5 0 0 1-.09-.992L5.5 7z" fill="currentColor"></path></g></svg>';
            break;
        default:
            icon = ''
            break;
    }
    return `<div class="w-5 h-5 ml-2 text-dodgerblue-400">${icon}</div>`;
}

const typeIcon = () => {
    let icon: string;
    const title: string = projectType || 'evergreen';
    switch (projectType) {
        case 'article':
            icon = '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><path d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z" fill="currentColor"></path><path d="M14 17H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z" fill="currentColor"></path></svg>';
            break;
        case 'code':
            icon ='<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M7 8l-4 4l4 4"></path><path d="M17 8l4 4l-4 4"></path><path d="M14 4l-4 16"></path></g></svg>';
            break;
        default:
            icon = '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 512 512"><path d="M64 96H0c0 123.7 100.3 224 224 224v144c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320C288 196.3 187.7 96 64 96zm384-64c-84.2 0-157.4 46.5-195.7 115.2c27.7 30.2 48.2 66.9 59 107.6C424 243.1 512 147.9 512 32h-64z" fill="currentColor"></path></svg>'
            break;
    }
    return `<div class="w-6 h-6 mr-2" title="${title}">${icon}</div>`;
}
---


<a href={project.link || link} target={target} class={`block no-underline border-0 border-b-0 ${className}  bg-slate-700 rounded-lg`}>
    <div class="w-full overflow-hidden text-gray-200 transition transform rounded-lg cursor-pointer group hover:text-gray-100 hover:bg-slate-700">
        { project.imageUrl ? <section class=" project-card">
           <img 
                src={project.imageUrl}  
                // width="500"
                height="500px"
                transition:persist="image" 
                transition:animate="slide" 
                alt={project.title ?? 'image'}
                class="object-cover object-left w-full transition-transform ease-in-out transform rounded-t-md group-hover:scale-105 h-[250px]" 
            />
             <h4 class="flex items-center px-4 pt-2 font-bold">
                <span set:html={typeIcon()} />
                <span> {project.title} </span>
                <span set:html={icon()} />
            </h4>
        </section>
        : <header class="px-4 pt-5">
            <h4 class="flex items-center font-bold">
                <span set:html={typeIcon()} />
                <span> {project.title} </span>
                <span set:html={icon()} />
            </h4> 
        </header> }
        <article class="px-4 pt-2 pb-4">
            <p class="text-sm whitespace-pre-wrap"> { project.description }</p>
            <section class="flex flex-wrap gap-2 mt-2"> { project.technologies && project.technologies.map(tech => (
                <span class="px-2 py-1 mb-1 mr-2 text-xs font-bold rounded-md bg-accent-100/20 text-accent-400">{ tech }</span>
            ))}</section>
        </article>
    </div>
</a>


<style lang="scss">
    .project-card {
        position: relative;
      

        &:after {
            content: '';
            position: absolute;
            right: 3px;
            top: 0;
            height: 0;
            width: 0;
            border-left: 20px solid var(--darken-primary-color);
            @apply border-slate-700 z-10;
            border-left: 50px solid transparent;
            border-right: 50px solid transparent;
            border-bottom: 50px solid transparent;
        }
    }
</style>