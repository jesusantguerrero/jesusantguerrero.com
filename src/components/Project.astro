---
export interface Project {
    title: string,
    description: string,
    technologies: string[]
}
export interface Props {
    project: Project,
    target?: string,
    link?: string,
    className?: string,
}

const { project, target, link, className } = Astro.props;

const icon = () => {
    let icon: string;
    switch (target) {
        case '_blank':
            icon = '<i class="w-2 h-2 ml-2 fas fa-external-link-alt"></i>'
            break;
        default:
            break;
    }
    return icon;
}
---
<a href={project.link || link} target={target} class={`block overflow-hidden no-underline whitespace-pre-wrap border-0 border-b-0 ${className}`}>
    <div class="px-10 py-5 text-gray-400 transition transform border border-gray-100 rounded-lg cursor-pointer hover:text-gray-500 hover:bg-gray-50 hover:scale-105">
        <h4 class="font-bold ">{project.title} {(icon())}</h4>
        <p class="mt-2 text-sm "> { project.description }</p>
        <p class="space-x-2"> { project.technologies && project.technologies.map(tech => (
            <span class="py-1 text-xs rounded-md text-accent-500">{ tech }</span>
        ))}</p>
    </div>
</a>